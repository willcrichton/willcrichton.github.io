import{a as P,b as s,c as d,d as I,e as g,f,g as r,h as y,i as w,j as S,k as C}from"./chunk-5PZ6SFSE.mjs";var c=s(d()),b=s(I());var h={};P(h,{default:()=>u,metadata:()=>x});var e=s(d());var x={title:"Will Crichton"},u=g(p=>(0,e.createElement)(y,{...p},...(()=>[`
`,...(()=>[`
`,...(()=>[`
`,`
`,(0,e.createElement)("header",{},(0,e.createElement)("div",{},(0,e.createElement)("div",{},(0,e.createElement)("h1",{},"Will Crichton")),`
`,(0,e.createElement)("div",{},(0,e.createElement)("img",{className:"profile",width:200,src:"/assets/img/headshot.jpg"}))),`
`,(0,e.createElement)("div",{},(0,e.createElement)("div",{className:"links"},(0,e.createElement)("a",{className:"email",href:"mailto:wcrichto@cs.stanford.edu"},"wcrichto@cs.stanford.edu"),`
`,(0,e.createElement)("a",{href:"https://twitter.com/wcrichton"},(0,e.createElement)("img",{src:"/assets/img/icon-twitter.png"})),`
`,(0,e.createElement)("a",{href:"https://github.com/willcrichton/"},(0,e.createElement)("img",{src:"/assets/img/icon-github.png"}))),`
`,(0,e.createElement)("div",{},(0,e.createElement)("p",{},"I am a computer scientist. My research combines cognitive psychology and programming language theory to understand how people program, and to design better tools for programmers."),`
`,(0,e.createElement)("p",{},"I am a 6th year Ph.D. student at Stanford University advised by ",(0,e.createElement)("a",{href:"https://graphics.stanford.edu/~hanrahan/"},"Pat Hanrahan")," and ",(0,e.createElement)("a",{href:"https://graphics.stanford.edu/~maneesh/"},"Maneesh Agrawala"),". I am planning to start a postdoc at the beginning of the next academic year, and to ultimately seek a faculty position.")))),`
`,`
`,(0,e.createElement)("section",{className:"portfolio shaded"},...(()=>{let n=({children:o,gap:t})=>(0,e.createElement)("div",{className:`grid gap-${t||"1rem"}`},o);return[`
`,(0,e.createElement)("p",{},"In my research I build ",(0,e.createElement)("em",{},"theories")," and ",(0,e.createElement)("em",{},"systems")," about programming. A theory tries to understand a concept in a simplified setting where its properties can be identified via logical or statistical analysis. A system applies theory to a real-world setting where unexpected constraints and engineering concerns influence the theory's application."),`
`,(0,e.createElement)(n,{gap:"2rem"},...(()=>{let o=[["infoflow",(0,e.createElement)("p",{},"I developed an algorithm for using ownership types to statically / modularly analyze information flow, and proved its soundness as noninterference ",(0,e.createElement)(r,{},"infoflow"),".")],["memory",(0,e.createElement)("p",{},"I showed that working memory limits a person's ability to remember the value of variables while program tracing ",(0,e.createElement)(r,{},"tracing-wm"),".")],["docgen",(0,e.createElement)("p",{},"I articulated a design space for documentation generators based on a cognitive task analysis of how developers search through APIs ",(0,e.createElement)(r,{},"docgen-infovis"),".")],["cluster",(0,e.createElement)("p",{},"I demonstrated that machine learning models can classify a program's high-level structure to a high degree of accuracy ",(0,e.createElement)(r,{},"structure-classification"),".")]];return[`
`,(0,e.createElement)("div",{className:"theories"},(0,e.createElement)("h2",{},"Theories"),`
`,(0,e.createElement)(n,{},o.map(([t,a],l)=>(0,e.createElement)("div",{key:l},(0,e.createElement)("img",{src:`/assets/img/theory-${t}.jpg`}),`
`,a)))),`
`,`
`,...(()=>{let t=[["flowistry",(0,e.createElement)("p",{},"I built ",(0,e.createElement)("a",{href:"https://github.com/willcrichton/flowistry/"},"Flowistry"),", an information flow analyzer for Rust, to help programmers identify code unrelated to their current task ",(0,e.createElement)(r,{},"infoflow"),".")],["cs242",(0,e.createElement)("p",{},"I redesigned ",(0,e.createElement)("a",{href:"https://stanford-cs242.github.io/f19/"},"CS 242"),", a graduate-level course on programming languages, to help students better understand how PL theory works in the real world ",(0,e.createElement)(r,{},"plclass"),".")],["rustdoc",(0,e.createElement)("p",{},"I extended ",(0,e.createElement)("a",{href:"https://doc.rust-lang.org/rustdoc"},"Rustdoc")," to ",(0,e.createElement)("a",{href:"https://twitter.com/wcrichton/status/1456112165744615426"},"automatically find examples")," for documented functions, to help programmers find examples when learning a new API.")],["nota",(0,e.createElement)("p",{},"I created ",(0,e.createElement)("a",{href:"https://nota-lang.org/"},"Nota"),", a document language for the browser, to make a world where I never have to write LaTeX again ",(0,e.createElement)(r,{},"nota"),".")]];return[`
`,(0,e.createElement)("div",{className:"projects"},(0,e.createElement)("h2",{},"Systems"),`
`,(0,e.createElement)(n,{},t.map(([a,l],i)=>(0,e.createElement)("div",{key:i},(0,e.createElement)("img",{src:`/assets/img/system-${a}.jpg`}),`
`,l))))]})()]})())]})()),`
`,`
`,`
`,`
`,`
`,...(()=>{let n=[{name:"infoflow-apps",paper:"TODO",title:"Applying Information Flow to Program Comprehension",authors:["Will Crichton"],kind:"workshop",venue:"PLATEAU",year:2021},{name:"infoflow",paper:"https://arxiv.org/abs/2111.13662",github:"https://github.com/willcrichton/flowistry",title:"Modular Information Flow Through Ownership",authors:["Will Crichton","Marco Patrignani","Maneesh Agrawala","Pat Hanrahan"],venue:"PLDI",year:2022,kind:"conference"},{name:"nota",paper:"https://willcrichton.net/nota/",github:"https://github.com/willcrichton/nota",title:"A New Medium for Communicating Research on Programming Languages",authors:["Will Crichton"],venue:"HATRA @ SPLASH",year:2021,kind:"workshop"},{name:"tracing-wm",title:"The Role of Working Memory in Program Tracing",paper:"https://arxiv.org/abs/2101.06305",authors:["Will Crichton","Maneesh Agrawala","Pat Hanrahan"],venue:"CHI",year:2021,kind:"conference"},{name:"structure-classification",title:"Automating Program Structure Classification",paper:"https://arxiv.org/abs/2101.10087",github:"https://github.com/willcrichton/autoplan",authors:["Will Crichton","Georiga Gabriela Sampaio","Pat Hanrahan"],venue:"SIGCSE",year:2021,kind:"conference"},{title:"Analysis of Faces in a Decade of US Cable TV News",paper:"https://jhong93.github.io/pdf/tvnews.pdf",site:"https://tvnews.stanford.edu",authors:"James Hong, Will Crichton, Haotian Zhang, Daniel Y. Fu, Jacob Ritchie, Jeremy Barenholtz, Ben Hannel, Xinwei Yao, Michaela Murray, Geraldine Moriba, Maneesh Agrawala, Kayvon Fatahalian".split(", "),venue:"KDD",year:2021,kind:"conference"},{name:"docgen-infovis",title:"Documentation Generation as Information Visualization",paper:"https://arxiv.org/abs/2011.05600",authors:["Will Crichton"],venue:"PLATEAU @ SPLASH",year:2020,kind:"workshop"},{title:"The Usability of Ownership",paper:"https://arxiv.org/abs/2011.06171",authors:["Will Crichton"],venue:"HATRA @ SPLASH",year:2020,kind:"workshop"},{title:"Human-Centric Program Synthesis",paper:"https://arxiv.org/abs/1909.12281",authors:["Will Crichton"],venue:"PLATEAU @ UIST",year:2019,kind:"workshop"},{title:"Scanner: Efficient Video Analysis at Scale",github:"https://github.com/scanner-research/scanner",paper:"https://arxiv.org/abs/1805.07339",authors:["Fait Poms","Will Crichton","Pat Hanrahan","Kayvon Fatahalian"],venue:"SIGGRAPH",year:2019,kind:"conference"},{title:"Rekall: Specifying Video Events using Compositions of Spatiotemporal Labels",paper:"https://arxiv.org/abs/1910.02993",authors:"Daniel Y. Fu, Will Crichton, James Hong, Xinwei Yao, Haotian Zhang, Anh Truong, Avanika Narayan, Maneesh Agrawala, Christopher R\xE9, Kayvon Fatahalian".split(", "),venue:"AI Systems @ SOSP",year:2019,kind:"workshop"},{name:"plclass",title:"From Theory to Systems: A Grounded Approach to Programming Language Education",paper:"https://arxiv.org/abs/1904.06750",authors:["Will Crichton"],venue:"SNAPL",year:2019,kind:"workshop"},{title:"Identifying Barriers to Adoption for Rust through Online Discourse",paper:"https://arxiv.org/abs/1901.01001",authors:["Anna Zeng","Will Crichton"],venue:"PLATEAU @ SPLASH",year:2018,kind:"workshop"}];return[`
`,`
`,...(()=>{let o=({pub:t,index:a})=>(0,e.createElement)(f,{block:!0,name:t.name,Label:[["[",a,"]"]]},(0,e.createElement)("div",{className:"pub"},(0,e.createElement)("div",{className:"pub-title"},(0,e.createElement)("a",{href:t.paper},t.title,".")),`
`,(0,e.createElement)("div",{},(0,e.createElement)("p",{className:"pub-authors"},...(()=>{let l="Will Crichton";return[`
`,t.authors.map((i,A)=>{let m=i==l?(0,e.createElement)("span",{key:i,className:"author-me"},i):i;return t.authors.length==1?m:A==t.authors.length-1?[[" and ",m]]:[[m,", "]]}),"."]})())),`
`,(0,e.createElement)("div",{},(0,e.createElement)("p",{},t.venue?[[t.venue," ",t.year]]:[["Under submission"]],"."))));return[`
`,`
`,(0,e.createElement)("section",{className:"publications"},(0,e.createElement)("h2",{},"Publications"),`
`,`
`,(0,e.createElement)("h3",{},"Conference publications"),`
`,`
`,n.map((t,a)=>[t,a]).filter(([t])=>t.kind=="conference").map(([t,a])=>(0,e.createElement)(o,{key:a,pub:t,index:a})),`
`,`
`,(0,e.createElement)("h3",{},"Workshop publications"),`
`,(0,e.createElement)("p",{style:{marginBottom:"1rem",fontStyle:"italic"}},"I love workshops! I enjoy discussing my half-baked or weirdly-niche ideas with other researchers. ",(0,e.createElement)("a",{href:"https://plateau-workshop.org/"},"PLATEAU")," and ",(0,e.createElement)("a",{href:"https://snapl.org/"},"SNAPL")," were a big part of the reason I got into PL/HCI research."),`
`,`
`,n.map((t,a)=>[t,a]).filter(([t])=>t.kind=="workshop").map(([t,a])=>(0,e.createElement)(o,{key:a,pub:t,index:a}))),`
`,`
`,`
`,(0,e.createElement)("section",{className:"ideas shaded"},(0,e.createElement)("div",{},(0,e.createElement)("h2",{},"Good Ideas For Free"),`
`,(0,e.createElement)("p",{style:{marginTop:"1rem"}},"Here are some interesting ideas that I haven't had time to keep exploring."),`
`,`
`,(0,e.createElement)("ul",{},(0,e.createElement)("li",{},"It should be possible to build a garbage-collected programming language on top of a non-GC language, ",(0,e.createElement)("em",{},"and get the standard library for free!"),`
`,"For instance, there should be a version of OCaml built on Rust that doesn't need to reimplement ",(0,e.createElement)("code",{},"Vec")," or ",(0,e.createElement)("code",{},"HashMap"),". See ",(0,e.createElement)("q",{},(0,e.createElement)("a",{href:"https://willcrichton.net/notes/gradual-programming/"},"Gradual Programming")),", ",(0,e.createElement)("q",{},(0,e.createElement)("a",{href:"/notes/rust-the-new-llvm/"},"Rust: The New LLVM"))," and ",(0,e.createElement)("a",{href:"https://github.com/willcrichton/lia"},"willcrichton/lia")," for further inspiration."),`
`,(0,e.createElement)("li",{},"When a CS teacher gets 100 solutions to a new assignment, they should be able to explore the commonalities and differences between solutions. I worked on this a bit ",(0,e.createElement)(r,{},"structure-classification"),", but there's a lot more to explore. See ",(0,e.createElement)("a",{href:"https://web.stanford.edu/~cpiech/bio/papers/generativeGrading.pdf"},'"Generative Grading: Neural Approximate Parsing for Automated Student Feedback"')," for another cool concept in this space."),`
`,(0,e.createElement)("li",{},"Trait-based languages like Rust have a ",(0,e.createElement)("a",{href:"https://sdleffler.github.io/RustTypeSystemTuringComplete/"},"Turing-complete")," logic-programming-esque computation model embedded into their type system. I built ",(0,e.createElement)("a",{href:"https://github.com/willcrichton/tyrade"},"Tyrade")," to show that it's possible to translate a sensible functional language into traits. But the translation is limited and I never formally proved the kind of relationship between these languages."))))]})()]})()])()])()])()));var v=s(S()),L=s(d()),N=s(C()),k="metadata",T=k in h?h[k]:{},H=p=>c.default.createElement(w,{...p},c.default.createElement(u,null));v.canUseDOM&&b.default.hydrate(c.default.createElement(H,{...T,script:"./index.mjs"}),document.documentElement);var export_React=L.default;var export_ReactDOMServer=N.default;export{H as Page,export_React as React,export_ReactDOMServer as ReactDOMServer,T as metadata};
